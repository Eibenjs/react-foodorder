{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\emins\\\\Desktop\\\\New folder (2)\\\\React\\\\That is my project\\\\foodorder\\\\src\\\\store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from 'react';\nimport CartContext from './cart-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedItems = state.items.concat(action.item);\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.items[existingCartItemIndex];\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    console.log(action.item);\n    console.log(action.item.totalAmount);\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedItems","concat","item","existingCartItemIndex","findIndex","id","existingCartItem","updatedTotalAmount","price","amount","console","log","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItem","removeItem","children"],"sources":["C:/Users/emins/Desktop/New folder (2)/React/That is my project/foodorder/src/store/CartProvider.js"],"sourcesContent":["import { useReducer } from 'react'\r\n\r\nimport CartContext from './cart-context'\r\n\r\nconst defaultCartState = {\r\n  items: [],\r\n  totalAmount: 0,\r\n}\r\n\r\nconst cartReducer = (state, action) => {\r\n  if (action.type === 'ADD') {\r\n    const updatedItems = state.items.concat(action.item)\r\n\r\n    const existingCartItemIndex = state.items.findIndex(\r\n      (item) => item.id === action.item.id\r\n    )\r\n\r\n    const existingCartItem = state.items[existingCartItemIndex]\r\n\r\n    const updatedTotalAmount =\r\n      state.totalAmount + action.item.price * action.item.amount\r\n\r\n    console.log(action.item)\r\n    console.log(action.item.totalAmount)\r\n\r\n    return {\r\n      items: updatedItems,\r\n      totalAmount: updatedTotalAmount,\r\n    }\r\n  }\r\n  return defaultCartState\r\n}\r\n\r\nconst CartProvider = (props) => {\r\n  const [cartState, dispatchCartAction] = useReducer(\r\n    cartReducer,\r\n    defaultCartState\r\n  )\r\n\r\n  const addItemToCartHandler = (item) => {\r\n    dispatchCartAction({\r\n      type: 'ADD',\r\n      item: item,\r\n    })\r\n  }\r\n\r\n  const removeItemFromCartHandler = (id) => {\r\n    dispatchCartAction({\r\n      type: 'REMOVE',\r\n      id: id,\r\n    })\r\n  }\r\n\r\n  const cartContext = {\r\n    items: cartState.items,\r\n    totalAmount: cartState.totalAmount,\r\n    addItem: addItemToCartHandler,\r\n    removeItem: removeItemFromCartHandler,\r\n  }\r\n\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  )\r\n}\r\n\r\nexport default CartProvider\r\n"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,gBAAgB,GAAG;EACvBC,KAAK,EAAE,EADgB;EAEvBC,WAAW,EAAE;AAFU,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EACrC,IAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;IACzB,MAAMC,YAAY,GAAGH,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAmBH,MAAM,CAACI,IAA1B,CAArB;IAEA,MAAMC,qBAAqB,GAAGN,KAAK,CAACH,KAAN,CAAYU,SAAZ,CAC3BF,IAAD,IAAUA,IAAI,CAACG,EAAL,KAAYP,MAAM,CAACI,IAAP,CAAYG,EADN,CAA9B;IAIA,MAAMC,gBAAgB,GAAGT,KAAK,CAACH,KAAN,CAAYS,qBAAZ,CAAzB;IAEA,MAAMI,kBAAkB,GACtBV,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACI,IAAP,CAAYM,KAAZ,GAAoBV,MAAM,CAACI,IAAP,CAAYO,MADtD;IAGAC,OAAO,CAACC,GAAR,CAAYb,MAAM,CAACI,IAAnB;IACAQ,OAAO,CAACC,GAAR,CAAYb,MAAM,CAACI,IAAP,CAAYP,WAAxB;IAEA,OAAO;MACLD,KAAK,EAAEM,YADF;MAELL,WAAW,EAAEY;IAFR,CAAP;EAID;;EACD,OAAOd,gBAAP;AACD,CAtBD;;AAwBA,MAAMmB,YAAY,GAAIC,KAAD,IAAW;EAAA;;EAC9B,MAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkCxB,UAAU,CAChDK,WADgD,EAEhDH,gBAFgD,CAAlD;;EAKA,MAAMuB,oBAAoB,GAAId,IAAD,IAAU;IACrCa,kBAAkB,CAAC;MACjBhB,IAAI,EAAE,KADW;MAEjBG,IAAI,EAAEA;IAFW,CAAD,CAAlB;EAID,CALD;;EAOA,MAAMe,yBAAyB,GAAIZ,EAAD,IAAQ;IACxCU,kBAAkB,CAAC;MACjBhB,IAAI,EAAE,QADW;MAEjBM,EAAE,EAAEA;IAFa,CAAD,CAAlB;EAID,CALD;;EAOA,MAAMa,WAAW,GAAG;IAClBxB,KAAK,EAAEoB,SAAS,CAACpB,KADC;IAElBC,WAAW,EAAEmB,SAAS,CAACnB,WAFL;IAGlBwB,OAAO,EAAEH,oBAHS;IAIlBI,UAAU,EAAEH;EAJM,CAApB;EAOA,oBACE,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAEC,WAA7B;IAAA,UACGL,KAAK,CAACQ;EADT;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CAhCD;;GAAMT,Y;;KAAAA,Y;AAkCN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}